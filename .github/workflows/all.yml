name: Build with Emscripten

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup emsdk
        uses: mymindstorm/setup-emsdk@v11
        with:
          # Make sure to set a version number!
          version: 3.1.38
          # This is the name of the cache folder.
          # The cache folder will be placed in the build directory,
          #  so make sure it doesn't conflict with anything!
          actions-cache-folder: 'emsdk-cache'

      - name: Verify emsdk
        run: emcc -v

      - name: Install dependencies
        run: |
          # Install required dependencies
          sudo apt-get update
          sudo apt-get install -y build-essential libboost-graph-dev nasm flex bison texinfo zlib1g-dev ccache libfl-dev

      - name: Init submodules
        run: |
          # Initialize and update Git submodules
          git submodule init
          git submodule update

      - name: Build zmac
        run: make zmac
        if: success() || failure()

      - name: Build merlin32
        run: make merlin32
        if: success() || failure()

      - name: Build c2t
        run: make c2t
        if: success() || failure()

      - name: Build makewav
        run: make makewav
        if: success() || failure()

      - name: Build dasm
        run: make dasm
        if: success() || failure()

      - name: Build wiz
        run: make wiz
        if: success() || failure()

      - name: Build fastbasic
        run: make fastbasic
        if: success() || failure()

      - name: Build CC65
        run: make cc65
        if: success() || failure()

      - name: Build 6809tools
        run: make 6809tools
        if: success() || failure()

      - name: Build verilator
        run: make verilator
        if: success() || failure()

      - name: Build SDCC
        run: make sdcc
        if: success() || failure()

      - name: Publish Artifacts
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: compilers_wasm_js_fs
          path: output/
